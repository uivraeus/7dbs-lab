# Inspired by https://medium.com/workleap/the-only-local-mongodb-replica-set-with-docker-compose-guide-youll-ever-need-2f0b74dd8384
version: "3.8"

services:
  mongodb1:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]

    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb1:27017',priority:1},{_id:1,host:'mongodb2:27017',priority:0.5},{_id:2,host:'mongodb3:27017',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

    volumes:
      - "mongodb1_data:/data"
    networks:
      - devcontainer_network

  mongodb2:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]

    volumes:
      - "mongodb2_data:/data"
    networks:
      - devcontainer_network

  mongodb3:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]

    volumes:
      - "mongodb3_data:/data"
    networks:
      - devcontainer_network

volumes:
  mongodb1_data:
  mongodb2_data:
  mongodb3_data:

networks:
  devcontainer_network:
    name: 7dbs_devcontainer_default
    external: true
